{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bayer\\\\OneDrive\\\\Documents\\\\GitHub\\\\PlantKnight\\\\actual_plant_website\\\\src\\\\components\\\\AddPlant.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddPlant() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Get deviceId from navigation state, fallback to empty string\n  const [deviceId, setDeviceId] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.deviceId) || \"\");\n  const [plantName, setPlantName] = useState(\"\");\n  const [plantSpecies, setPlantSpecies] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setMessage(\"\");\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/add_plant\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: \"testuser\",\n          // You might want to get this from auth context\n          plant_name: plantName,\n          species: plantSpecies,\n          device_id: deviceId\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(\"Plant added successfully!\");\n        setTimeout(() => navigate(\"/plants\"), 1500);\n      } else {\n        setMessage(`Error adding plant: ${data.message || 'Please try again.'}`);\n      }\n    } catch (error) {\n      console.error(\"Error adding plant:\", error);\n      setMessage(\"Error adding plant. Please check your connection and try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Plant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/plants\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: plantName,\n          onChange: e => setPlantName(e.target.value),\n          required: true,\n          placeholder: \"Enter plant name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Species:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: plantSpecies,\n          onChange: e => setPlantSpecies(e.target.value),\n          required: true,\n          placeholder: \"Enter plant species\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Device Id:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: deviceId,\n          onChange: e => setDeviceId(e.target.value),\n          required: true,\n          placeholder: \"Enter device ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? \"Adding Plant...\" : \"Add Plant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPlant, \"03d1DJccG4pca8tXGWj2ufnt6Ls=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = AddPlant;\nvar _c;\n$RefreshReg$(_c, \"AddPlant\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","jsxDEV","_jsxDEV","AddPlant","_s","_location$state","location","navigate","deviceId","setDeviceId","state","plantName","setPlantName","plantSpecies","setPlantSpecies","message","setMessage","isLoading","setIsLoading","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","username","plant_name","species","device_id","data","json","ok","setTimeout","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onSubmit","type","value","onChange","target","required","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/bayer/OneDrive/Documents/GitHub/PlantKnight/actual_plant_website/src/components/AddPlant.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nexport default function AddPlant() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  // Get deviceId from navigation state, fallback to empty string\r\n  const [deviceId, setDeviceId] = useState(location.state?.deviceId || \"\");\r\n  const [plantName, setPlantName] = useState(\"\");\r\n  const [plantSpecies, setPlantSpecies] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/api/add_plant\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ \r\n          username: \"testuser\", // You might want to get this from auth context\r\n          plant_name: plantName, \r\n          species: plantSpecies,\r\n          device_id: deviceId \r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (response.ok) {\r\n        setMessage(\"Plant added successfully!\");\r\n        setTimeout(() => navigate(\"/plants\"), 1500);\r\n      } else {\r\n        setMessage(`Error adding plant: ${data.message || 'Please try again.'}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding plant:\", error);\r\n      setMessage(\"Error adding plant. Please check your connection and try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <h1>Add Plant</h1>\r\n        <nav>\r\n          <Link to=\"/plants\">Home</Link>\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        <form onSubmit={handleSubmit}>\r\n          <label>Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={plantName}\r\n            onChange={(e) => setPlantName(e.target.value)}\r\n            required\r\n            placeholder=\"Enter plant name\"\r\n          />\r\n\r\n          <label>Species:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={plantSpecies}\r\n            onChange={(e) => setPlantSpecies(e.target.value)}\r\n            required\r\n            placeholder=\"Enter plant species\"\r\n          />\r\n\r\n          <label>Device Id:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={deviceId}\r\n            onChange={(e) => setDeviceId(e.target.value)}\r\n            required\r\n            placeholder=\"Enter device ID\"\r\n          />\r\n\r\n          <button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? \"Adding Plant...\" : \"Add Plant\"}\r\n          </button>\r\n        </form>\r\n        <p>{message}</p>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}