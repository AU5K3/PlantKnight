{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bayer\\\\OneDrive\\\\Documents\\\\GitHub\\\\PlantKnight\\\\actual_plant_website\\\\src\\\\components\\\\RemovePlant.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RemovePlant() {\n  _s();\n  var _plants$find, _plants$find2;\n  const [plants, setPlants] = useState([]);\n  const [selectedPlant, setSelectedPlant] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const navigate = useNavigate();\n\n  // Fetch user's plants on component mount\n  useEffect(() => {\n    fetchUserPlants();\n  }, []);\n  const fetchUserPlants = async () => {\n    try {\n      /*\n      // First try to get plants from localStorage (from login)\n      const userDataStr = localStorage.getItem('userData');\n      if (userDataStr) {\n      const userData = JSON.parse(userDataStr);\n      console.log(\"User data from localStorage:\", userData);\n      \n      if (userData.devices && Array.isArray(userData.devices)) {\n        // Transform user's devices to plant format\n        const transformedPlants = userData.devices.map((device, index) => ({\n          id: device.device_id || `plant_${index}`,\n          name: device.plant_name || 'Unknown Plant',\n          species: device.species || 'Unknown Species',\n          status: device.is_connected ? 'Connected' : 'Disconnected',\n          device_id: device.device_id\n        }));\n        setPlants(transformedPlants);\n        return;\n      }\n      }*/\n\n      // Fallback: Get username from localStorage and fetch from API\n      const username = localStorage.getItem('username') || \"testuser\";\n      console.log(\"Fetching plants for user from API:\", username);\n      const res = await fetch(`http://127.0.0.1:5000/api/get_user_plants?username=${username}`);\n      if (res.status === 404) {\n        console.warn(\"User not found, no plants to remove\");\n        setPlants([]);\n        return;\n      }\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      const data = await res.json();\n      console.log(\"Fetched plants data from API:\", data);\n      if (data && data.plants && Array.isArray(data.plants)) {\n        const transformedPlants = data.plants.map((plant, index) => ({\n          id: plant.device_id || `plant_${index}`,\n          name: plant.plant_name || 'Unknown Plant',\n          species: plant.species || 'Unknown Species',\n          status: plant.is_connected ? 'Connected' : 'Disconnected',\n          device_id: plant.device_id\n        }));\n        setPlants(transformedPlants);\n      } else {\n        setPlants([]);\n      }\n    } catch (err) {\n      console.error(\"Error fetching plants:\", err);\n      setMessage(\"Error loading plants. Please try again.\");\n      setPlants([]);\n    }\n  };\n  const handleRemovePlant = async () => {\n    if (!selectedPlant) {\n      setMessage(\"Please select a plant to remove.\");\n      return;\n    }\n    setIsLoading(true);\n    setMessage(\"Removing plant...\");\n    try {\n      const username = localStorage.getItem('username') || \"testuser\";\n      const response = await fetch(\"http://127.0.0.1:5000/api/remove_plant\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: username,\n          device_id: selectedPlant\n        })\n      });\n      const data = await response.json();\n      console.log(\"Remove plant response:\", data);\n      if (response.ok) {\n        setMessage(\"Plant removed successfully! Updating list...\");\n        // Refresh the plants list\n        await fetchUserPlants();\n        setSelectedPlant(\"\");\n        setTimeout(() => {\n          setMessage(\"\");\n        }, 2000);\n      } else {\n        setMessage(`Error removing plant: ${data.message || 'Please try again.'}`);\n      }\n    } catch (error) {\n      console.error(\"Error removing plant:\", error);\n      if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError')) {\n        setMessage(\"Error: Cannot connect to API server. Please make sure the server is running on port 5000.\");\n      } else {\n        setMessage(\"Error removing plant. Please check your connection and try again.\");\n      }\n    } finally {\n      setIsLoading(false);\n      setShowConfirmation(false);\n    }\n  };\n  const handleConfirmation = () => {\n    if (!selectedPlant) {\n      setMessage(\"Please select a plant to remove.\");\n      return;\n    }\n    console.log(\"Selected plant:\", selectedPlant);\n    setShowConfirmation(true);\n  };\n  const handleCancel = () => {\n    setShowConfirmation(false);\n    setMessage(\"\");\n  };\n  const getSelectedPlantName = () => {\n    const plant = plants.find(p => p.device_id === selectedPlant);\n    return plant ? plant.name : \"Unknown Plant\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Remove Plant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/plants\",\n          children: \"\\u2190 Back to Plants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [plants.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No plants found to remove.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You can add plants by going to the \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/addplant\",\n            children: \"Add Plant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 51\n          }, this), \" page.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"plant-select\",\n            children: \"Select a plant to remove:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"plant-select\",\n            value: selectedPlant,\n            onChange: e => setSelectedPlant(e.target.value),\n            style: {\n              width: \"100%\",\n              padding: \"10px\",\n              marginTop: \"5px\",\n              fontSize: \"16px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select a plant --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), plants.map(plant => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: plant.device_id,\n              children: [plant.name, \" (\", plant.species, \") - \", plant.status]\n            }, plant.device_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), selectedPlant && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\",\n            padding: \"15px\",\n            backgroundColor: \"#f8f9fa\",\n            border: \"1px solid #dee2e6\",\n            borderRadius: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Selected Plant Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 20\n            }, this), \" \", getSelectedPlantName()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Species:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 20\n            }, this), \" \", (_plants$find = plants.find(p => p.device_id === selectedPlant)) === null || _plants$find === void 0 ? void 0 : _plants$find.species]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 20\n            }, this), \" \", (_plants$find2 = plants.find(p => p.device_id === selectedPlant)) === null || _plants$find2 === void 0 ? void 0 : _plants$find2.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Device ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 20\n            }, this), \" \", selectedPlant]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirmation,\n            disabled: !selectedPlant || isLoading,\n            style: {\n              backgroundColor: \"#dc3545\",\n              color: \"white\",\n              padding: \"12px 24px\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              fontSize: \"16px\",\n              cursor: selectedPlant && !isLoading ? \"pointer\" : \"not-allowed\",\n              opacity: selectedPlant && !isLoading ? 1 : 0.6\n            },\n            children: isLoading ? \"Removing...\" : \"Remove Selected Plant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"fixed\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            backgroundColor: \"white\",\n            padding: \"30px\",\n            border: \"2px solid #dc3545\",\n            borderRadius: \"10px\",\n            boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\n            zIndex: 1000,\n            minWidth: \"300px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: \"#dc3545\",\n              marginTop: 0\n            },\n            children: \"Confirm Plant Removal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Are you sure you want to remove \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: getSelectedPlantName()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 52\n            }, this), \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"#666\",\n              fontSize: \"14px\"\n            },\n            children: \"This action cannot be undone. All data associated with this plant will be permanently deleted.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"20px\",\n              display: \"flex\",\n              gap: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRemovePlant,\n              disabled: isLoading,\n              style: {\n                backgroundColor: \"#dc3545\",\n                color: \"white\",\n                padding: \"10px 20px\",\n                border: \"none\",\n                borderRadius: \"5px\",\n                cursor: isLoading ? \"not-allowed\" : \"pointer\",\n                opacity: isLoading ? 0.6 : 1\n              },\n              children: isLoading ? \"Removing...\" : \"Yes, Remove Plant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancel,\n              disabled: isLoading,\n              style: {\n                backgroundColor: \"#6c757d\",\n                color: \"white\",\n                padding: \"10px 20px\",\n                border: \"none\",\n                borderRadius: \"5px\",\n                cursor: isLoading ? \"not-allowed\" : \"pointer\",\n                opacity: isLoading ? 0.6 : 1\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n            zIndex: 999\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\",\n          padding: \"10px\",\n          backgroundColor: message.includes(\"Error\") ? \"#f8d7da\" : \"#d4edda\",\n          color: message.includes(\"Error\") ? \"#721c24\" : \"#155724\",\n          border: `1px solid ${message.includes(\"Error\") ? \"#f5c6cb\" : \"#c3e6cb\"}`,\n          borderRadius: \"5px\"\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(RemovePlant, \"Yy6QmofZ5J4AtuI+5/fPF7LHgH0=\", false, function () {\n  return [useNavigate];\n});\n_c = RemovePlant;\nvar _c;\n$RefreshReg$(_c, \"RemovePlant\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","RemovePlant","_s","_plants$find","_plants$find2","plants","setPlants","selectedPlant","setSelectedPlant","message","setMessage","isLoading","setIsLoading","showConfirmation","setShowConfirmation","navigate","fetchUserPlants","username","localStorage","getItem","console","log","res","fetch","status","warn","ok","Error","data","json","Array","isArray","transformedPlants","map","plant","index","id","device_id","name","plant_name","species","is_connected","err","error","handleRemovePlant","response","method","headers","body","JSON","stringify","setTimeout","includes","handleConfirmation","handleCancel","getSelectedPlantName","find","p","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","length","style","marginBottom","htmlFor","value","onChange","e","target","width","padding","marginTop","fontSize","backgroundColor","border","borderRadius","onClick","disabled","color","cursor","opacity","position","top","left","transform","boxShadow","zIndex","minWidth","display","gap","height","_c","$RefreshReg$"],"sources":["C:/Users/bayer/OneDrive/Documents/GitHub/PlantKnight/actual_plant_website/src/components/RemovePlant.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nexport default function RemovePlant() {\n  const [plants, setPlants] = useState([]);\n  const [selectedPlant, setSelectedPlant] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const navigate = useNavigate();\n\n  // Fetch user's plants on component mount\n  useEffect(() => {\n    fetchUserPlants();\n  }, []);\n\n  const fetchUserPlants = async () => {\n    try {\n        /*\n      // First try to get plants from localStorage (from login)\n      const userDataStr = localStorage.getItem('userData');\n      if (userDataStr) {\n        const userData = JSON.parse(userDataStr);\n        console.log(\"User data from localStorage:\", userData);\n        \n        if (userData.devices && Array.isArray(userData.devices)) {\n          // Transform user's devices to plant format\n          const transformedPlants = userData.devices.map((device, index) => ({\n            id: device.device_id || `plant_${index}`,\n            name: device.plant_name || 'Unknown Plant',\n            species: device.species || 'Unknown Species',\n            status: device.is_connected ? 'Connected' : 'Disconnected',\n            device_id: device.device_id\n          }));\n          setPlants(transformedPlants);\n          return;\n        }\n      }*/\n      \n      // Fallback: Get username from localStorage and fetch from API\n      const username = localStorage.getItem('username') || \"testuser\";\n      console.log(\"Fetching plants for user from API:\", username);\n      \n      const res = await fetch(`http://127.0.0.1:5000/api/get_user_plants?username=${username}`);\n      \n      if (res.status === 404) {\n        console.warn(\"User not found, no plants to remove\");\n        setPlants([]);\n        return;\n      }\n      \n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      \n      const data = await res.json();\n      console.log(\"Fetched plants data from API:\", data);\n      \n      if (data && data.plants && Array.isArray(data.plants)) {\n        const transformedPlants = data.plants.map((plant, index) => ({\n          id: plant.device_id || `plant_${index}`,\n          name: plant.plant_name || 'Unknown Plant',\n          species: plant.species || 'Unknown Species',\n          status: plant.is_connected ? 'Connected' : 'Disconnected',\n          device_id: plant.device_id\n        }));\n        setPlants(transformedPlants);\n      } else {\n        setPlants([]);\n      }\n    } catch (err) {\n      console.error(\"Error fetching plants:\", err);\n      setMessage(\"Error loading plants. Please try again.\");\n      setPlants([]);\n    }\n  };\n\n  const handleRemovePlant = async () => {\n    if (!selectedPlant) {\n      setMessage(\"Please select a plant to remove.\");\n      return;\n    }\n\n    setIsLoading(true);\n    setMessage(\"Removing plant...\");\n\n    try {\n      const username = localStorage.getItem('username') || \"testuser\";\n      const response = await fetch(\"http://127.0.0.1:5000/api/remove_plant\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ \n          username: username,\n          device_id: selectedPlant\n        }),\n      });\n\n      const data = await response.json();\n      console.log(\"Remove plant response:\", data);\n\n      if (response.ok) {\n        setMessage(\"Plant removed successfully! Updating list...\");\n        // Refresh the plants list\n        await fetchUserPlants();\n        setSelectedPlant(\"\");\n        setTimeout(() => {\n          setMessage(\"\");\n        }, 2000);\n      } else {\n        setMessage(`Error removing plant: ${data.message || 'Please try again.'}`);\n      }\n    } catch (error) {\n      console.error(\"Error removing plant:\", error);\n      if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError')) {\n        setMessage(\"Error: Cannot connect to API server. Please make sure the server is running on port 5000.\");\n      } else {\n        setMessage(\"Error removing plant. Please check your connection and try again.\");\n      }\n    } finally {\n      setIsLoading(false);\n      setShowConfirmation(false);\n    }\n  };\n\n  const handleConfirmation = () => {\n    if (!selectedPlant) {\n      setMessage(\"Please select a plant to remove.\");\n      return;\n    }\n    console.log(\"Selected plant:\", selectedPlant);\n    setShowConfirmation(true);\n  };\n\n  const handleCancel = () => {\n    setShowConfirmation(false);\n    setMessage(\"\");\n  };\n\n  const getSelectedPlantName = () => {\n    const plant = plants.find(p => p.device_id === selectedPlant);\n    return plant ? plant.name : \"Unknown Plant\";\n  };\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Remove Plant</h1>\n        <nav>\n          <Link to=\"/plants\">← Back to Plants</Link>\n        </nav>\n      </header>\n      \n      <main>\n        {plants.length === 0 ? (\n          <div>\n            <p>No plants found to remove.</p>\n            <p>You can add plants by going to the <Link to=\"/addplant\">Add Plant</Link> page.</p>\n          </div>\n        ) : (\n          <div>\n            <div style={{ marginBottom: \"20px\" }}>\n              <label htmlFor=\"plant-select\">Select a plant to remove:</label>\n              <select\n                id=\"plant-select\"\n                value={selectedPlant}\n                onChange={(e) => setSelectedPlant(e.target.value)}\n                style={{ \n                  width: \"100%\", \n                  padding: \"10px\", \n                  marginTop: \"5px\",\n                  fontSize: \"16px\"\n                }}\n              >\n                <option value=\"\">-- Select a plant --</option>\n                {plants.map((plant) => (\n                  <option key={plant.device_id} value={plant.device_id}>\n                    {plant.name} ({plant.species}) - {plant.status}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {selectedPlant && (\n              <div style={{ \n                marginBottom: \"20px\", \n                padding: \"15px\", \n                backgroundColor: \"#f8f9fa\", \n                border: \"1px solid #dee2e6\",\n                borderRadius: \"5px\"\n              }}>\n                <h3>Selected Plant Details:</h3>\n                <p><strong>Name:</strong> {getSelectedPlantName()}</p>\n                <p><strong>Species:</strong> {plants.find(p => p.device_id === selectedPlant)?.species}</p>\n                <p><strong>Status:</strong> {plants.find(p => p.device_id === selectedPlant)?.status}</p>\n                <p><strong>Device ID:</strong> {selectedPlant}</p>\n              </div>\n            )}\n\n            <div style={{ marginBottom: \"20px\" }}>\n              <button\n                onClick={handleConfirmation}\n                disabled={!selectedPlant || isLoading}\n                style={{\n                  backgroundColor: \"#dc3545\",\n                  color: \"white\",\n                  padding: \"12px 24px\",\n                  border: \"none\",\n                  borderRadius: \"5px\",\n                  fontSize: \"16px\",\n                  cursor: selectedPlant && !isLoading ? \"pointer\" : \"not-allowed\",\n                  opacity: selectedPlant && !isLoading ? 1 : 0.6\n                }}\n              >\n                {isLoading ? \"Removing...\" : \"Remove Selected Plant\"}\n              </button>\n            </div>\n\n            {showConfirmation && (\n              <div style={{\n                position: \"fixed\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                backgroundColor: \"white\",\n                padding: \"30px\",\n                border: \"2px solid #dc3545\",\n                borderRadius: \"10px\",\n                boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\n                zIndex: 1000,\n                minWidth: \"300px\"\n              }}>\n                <h3 style={{ color: \"#dc3545\", marginTop: 0 }}>Confirm Plant Removal</h3>\n                <p>Are you sure you want to remove <strong>{getSelectedPlantName()}</strong>?</p>\n                <p style={{ color: \"#666\", fontSize: \"14px\" }}>\n                  This action cannot be undone. All data associated with this plant will be permanently deleted.\n                </p>\n                <div style={{ marginTop: \"20px\", display: \"flex\", gap: \"10px\" }}>\n                  <button\n                    onClick={handleRemovePlant}\n                    disabled={isLoading}\n                    style={{\n                      backgroundColor: \"#dc3545\",\n                      color: \"white\",\n                      padding: \"10px 20px\",\n                      border: \"none\",\n                      borderRadius: \"5px\",\n                      cursor: isLoading ? \"not-allowed\" : \"pointer\",\n                      opacity: isLoading ? 0.6 : 1\n                    }}\n                  >\n                    {isLoading ? \"Removing...\" : \"Yes, Remove Plant\"}\n                  </button>\n                  <button\n                    onClick={handleCancel}\n                    disabled={isLoading}\n                    style={{\n                      backgroundColor: \"#6c757d\",\n                      color: \"white\",\n                      padding: \"10px 20px\",\n                      border: \"none\",\n                      borderRadius: \"5px\",\n                      cursor: isLoading ? \"not-allowed\" : \"pointer\",\n                      opacity: isLoading ? 0.6 : 1\n                    }}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            )}\n\n            {showConfirmation && (\n              <div style={{\n                position: \"fixed\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                height: \"100%\",\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n                zIndex: 999\n              }}></div>\n            )}\n          </div>\n        )}\n\n        {message && (\n          <div style={{\n            marginTop: \"20px\",\n            padding: \"10px\",\n            backgroundColor: message.includes(\"Error\") ? \"#f8d7da\" : \"#d4edda\",\n            color: message.includes(\"Error\") ? \"#721c24\" : \"#155724\",\n            border: `1px solid ${message.includes(\"Error\") ? \"#f5c6cb\" : \"#c3e6cb\"}`,\n            borderRadius: \"5px\"\n          }}>\n            {message}\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}