{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bayer\\\\OneDrive\\\\Documents\\\\GitHub\\\\PlantKnight\\\\actual_plant_website\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate(); // ✅ get navigate function\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(\"Logging in...\");\n    try {\n      const res = await fetch(\"http://127.0.0.1:5000/api/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await res.json();\n      console.log(\"Login response:\", data);\n      if (res.ok) {\n        setMessage(\"Login successful! Redirecting...\");\n        // Store username and user data for use in other components\n        localStorage.setItem('username', username);\n        if (data.user) {\n          localStorage.setItem('userData', JSON.stringify(data.user));\n        }\n        setTimeout(() => navigate(\"/plants\"), 1500);\n      } else {\n        setMessage(`Login failed: ${data.message || 'Invalid credentials'}`);\n      }\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      if (err.message.includes('Failed to fetch') || err.message.includes('NetworkError')) {\n        setMessage(\"Error: Cannot connect to API server. Please make sure the server is running on port 5000.\");\n      } else {\n        setMessage(\"Network error. Please try again.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"T2T1fReLIgeIYntMDPHjrbt+CuI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","message","setMessage","navigate","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","console","log","ok","localStorage","setItem","user","setTimeout","err","error","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/bayer/OneDrive/Documents/GitHub/PlantKnight/actual_plant_website/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const navigate = useNavigate(); // ✅ get navigate function\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"Logging in...\");\r\n\r\n    try {\r\n      const res = await fetch(\"http://127.0.0.1:5000/api/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(\"Login response:\", data);\r\n\r\n      if (res.ok) {\r\n        setMessage(\"Login successful! Redirecting...\");\r\n        // Store username and user data for use in other components\r\n        localStorage.setItem('username', username);\r\n        if (data.user) {\r\n          localStorage.setItem('userData', JSON.stringify(data.user));\r\n        }\r\n        setTimeout(() => navigate(\"/plants\"), 1500);\r\n      } else {\r\n        setMessage(`Login failed: ${data.message || 'Invalid credentials'}`);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      if (err.message.includes('Failed to fetch') || err.message.includes('NetworkError')) {\r\n        setMessage(\"Error: Cannot connect to API server. Please make sure the server is running on port 5000.\");\r\n      } else {\r\n        setMessage(\"Network error. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <h1>Login</h1>\r\n        <nav>\r\n          <Link to=\"/\">Home</Link>\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        <form onSubmit={handleSubmit}>\r\n          <label>Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n        <p>{message}</p>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}