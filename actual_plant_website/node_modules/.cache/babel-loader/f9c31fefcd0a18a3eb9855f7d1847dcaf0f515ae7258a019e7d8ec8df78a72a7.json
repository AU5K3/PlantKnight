{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bayer\\\\OneDrive\\\\Documents\\\\GitHub\\\\PlantKnight\\\\actual_plant_website\\\\src\\\\components\\\\AddPlant.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddPlant() {\n  _s();\n  var _location$state, _location$state2;\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Get deviceId and username from navigation state, fallback to empty string\n  const [deviceId, setDeviceId] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.deviceId) || \"\");\n  const [username, setUsername] = useState(((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.username) || \"testuser\");\n  const [plantName, setPlantName] = useState(\"\");\n  const [plantSpecies, setPlantSpecies] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setMessage(\"\");\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/add_plant\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: username,\n          // Use the actual username from navigation state\n          plant_name: plantName,\n          species: plantSpecies\n          // Note: device_id is generated by the API, not sent from frontend\n        })\n      });\n      const data = await response.json();\n      console.log(\"Add plant response:\", data);\n      if (response.ok) {\n        setMessage(`Plant added successfully! Device ID: ${data.device_id || 'Unknown'}`);\n        setTimeout(() => navigate(\"/plants\"), 2000);\n      } else {\n        if (response.status === 404 && data.message === 'User not found') {\n          setMessage(`Error: User '${username}' not found. Please register first or update the username.`);\n        } else {\n          setMessage(`Error adding plant: ${data.message || 'Please try again.'}`);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error adding plant:\", error);\n      if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError')) {\n        setMessage(\"Error: Cannot connect to API server. Please make sure the server is running on port 5000.\");\n      } else {\n        setMessage(\"Error adding plant. Please check your connection and try again.\");\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Plant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/plants\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: plantName,\n          onChange: e => setPlantName(e.target.value),\n          required: true,\n          placeholder: \"Enter plant name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Species:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: plantSpecies,\n          onChange: e => setPlantSpecies(e.target.value),\n          required: true,\n          placeholder: \"Enter plant species\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Device Id:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: deviceId,\n          onChange: e => setDeviceId(e.target.value),\n          required: true,\n          placeholder: \"Enter device ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? \"Adding Plant...\" : \"Add Plant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPlant, \"lmo/hXP0AaqtQqX/tHH5NFDdex0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = AddPlant;\nvar _c;\n$RefreshReg$(_c, \"AddPlant\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","jsxDEV","_jsxDEV","AddPlant","_s","_location$state","_location$state2","location","navigate","deviceId","setDeviceId","state","username","setUsername","plantName","setPlantName","plantSpecies","setPlantSpecies","message","setMessage","isLoading","setIsLoading","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","plant_name","species","data","json","console","log","ok","device_id","setTimeout","status","error","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onSubmit","type","value","onChange","target","required","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/bayer/OneDrive/Documents/GitHub/PlantKnight/actual_plant_website/src/components/AddPlant.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nexport default function AddPlant() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  // Get deviceId and username from navigation state, fallback to empty string\r\n  const [deviceId, setDeviceId] = useState(location.state?.deviceId || \"\");\r\n  const [username, setUsername] = useState(location.state?.username || \"testuser\");\r\n  const [plantName, setPlantName] = useState(\"\");\r\n  const [plantSpecies, setPlantSpecies] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/api/add_plant\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ \r\n          username: username, // Use the actual username from navigation state\r\n          plant_name: plantName, \r\n          species: plantSpecies\r\n          // Note: device_id is generated by the API, not sent from frontend\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(\"Add plant response:\", data);\r\n      \r\n      if (response.ok) {\r\n        setMessage(`Plant added successfully! Device ID: ${data.device_id || 'Unknown'}`);\r\n        setTimeout(() => navigate(\"/plants\"), 2000);\r\n      } else {\r\n        if (response.status === 404 && data.message === 'User not found') {\r\n          setMessage(`Error: User '${username}' not found. Please register first or update the username.`);\r\n        } else {\r\n          setMessage(`Error adding plant: ${data.message || 'Please try again.'}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding plant:\", error);\r\n      if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError')) {\r\n        setMessage(\"Error: Cannot connect to API server. Please make sure the server is running on port 5000.\");\r\n      } else {\r\n        setMessage(\"Error adding plant. Please check your connection and try again.\");\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header>\r\n        <h1>Add Plant</h1>\r\n        <nav>\r\n          <Link to=\"/plants\">Home</Link>\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        <form onSubmit={handleSubmit}>\r\n          <label>Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={plantName}\r\n            onChange={(e) => setPlantName(e.target.value)}\r\n            required\r\n            placeholder=\"Enter plant name\"\r\n          />\r\n\r\n          <label>Species:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={plantSpecies}\r\n            onChange={(e) => setPlantSpecies(e.target.value)}\r\n            required\r\n            placeholder=\"Enter plant species\"\r\n          />\r\n\r\n          <label>Device Id:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={deviceId}\r\n            onChange={(e) => setDeviceId(e.target.value)}\r\n            required\r\n            placeholder=\"Enter device ID\"\r\n          />\r\n\r\n          <button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? \"Adding Plant...\" : \"Add Plant\"}\r\n          </button>\r\n        </form>\r\n        <p>{message}</p>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}