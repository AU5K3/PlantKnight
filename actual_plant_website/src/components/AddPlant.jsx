import React, { useState, useEffect } from "react";
import { Link, useNavigate, useLocation } from "react-router-dom";

export default function AddPlant() {
  const location = useLocation();
  const navigate = useNavigate();

  // Get deviceId and username from navigation state or localStorage, fallback to empty string
  const [deviceId, setDeviceId] = useState(location.state?.deviceId || "");
  const [username, setUsername] = useState(location.state?.username || localStorage.getItem('username') || "testuser");
  const [plantName, setPlantName] = useState("");
  const [plantSpecies, setPlantSpecies] = useState("");
  const [message, setMessage] = useState("");
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    setMessage("");

    try {
      const response = await fetch("http://127.0.0.1:5000/api/add_plant", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ 
          username: username, // Use the actual username from navigation state
          plant_name: plantName, 
          species: plantSpecies
          // Note: device_id is generated by the API, not sent from frontend
        }),
      });

      const data = await response.json();
      console.log("Add plant response:", data);
      
      if (response.ok) {
        setMessage(`Plant added successfully! Device ID: ${data.device_id || 'Unknown'}`);
        setTimeout(() => navigate("/plants"), 2000);
      } else {
        if (response.status === 404 && data.message === 'User not found') {
          setMessage(`Error: User '${username}' not found. Please register first or update the username.`);
        } else {
          setMessage(`Error adding plant: ${data.message || 'Please try again.'}`);
        }
      }
    } catch (error) {
      console.error("Error adding plant:", error);
      if (error.message.includes('Failed to fetch') || error.message.includes('NetworkError')) {
        setMessage("Error: Cannot connect to API server. Please make sure the server is running on port 5000.");
      } else {
        setMessage("Error adding plant. Please check your connection and try again.");
      }
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="container">
      <header>
        <h1>Add Plant</h1>
        <nav>
          <Link to="/plants">Home</Link>
        </nav>
      </header>
      <main>
        <div style={{ marginBottom: "20px", padding: "10px", backgroundColor: "#f0f0f0", borderRadius: "5px" }}>
          <p><strong>Adding plant for user:</strong> {username}</p>
          {username === "testuser" && (
            <p style={{ color: "orange", fontSize: "0.9em" }}>
              ⚠️ Using default username. Make sure this user exists in the database.
            </p>
          )}
        </div>
        <form onSubmit={handleSubmit}>
          <label>Name:</label>
          <input
            type="text"
            value={plantName}
            onChange={(e) => setPlantName(e.target.value)}
            required
            placeholder="Enter plant name"
          />

          <label>Species:</label>
          <input
            type="text"
            value={plantSpecies}
            onChange={(e) => setPlantSpecies(e.target.value)}
            required
            placeholder="Enter plant species"
          />

          <label>Device Id:</label>
          <input
            type="text"
            value={deviceId}
            onChange={(e) => setDeviceId(e.target.value)}
            required
            placeholder="Enter device ID"
          />

          <button type="submit" disabled={isLoading}>
            {isLoading ? "Adding Plant..." : "Add Plant"}
          </button>
        </form>
        <p>{message}</p>
      </main>
    </div>
  );
}
